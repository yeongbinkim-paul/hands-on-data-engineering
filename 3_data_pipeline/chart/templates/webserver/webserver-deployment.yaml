################################
## Airflow Webserver Deployment
#################################
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Chart.Name }}-webserver-{{ .Values.env }}
  namespace: "{{ .Release.Namespace }}"
  labels:
{{- with .Values.labels }}
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      tier: airflow
      component: webserver
      release: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        tier: airflow
        component: webserver
        release: {{ .Chart.Name }}
      annotations:
        checksum/metadata-secret: eaff6fb1d6aed278ad89066c4207aceb5344352de9cd20731b919da9348c179e
        checksum/pgbouncer-config-secret: 1dae2adc757473469686d37449d076b0c82404f61413b58ae68b3c5e99527688
        checksum/webserver-secret-key: 4e95618168092fc85963f826a3330155ec1a2a7585a77ee456af77a1c4a3e190
        checksum/airflow-config: e68ea1b15763bb1cc093a97c7da1f57ee493e4a846228e6075da7c9a111b2613
        checksum/webserver-config: 2f3fdfd294a37094d2abee43b2b09888a5c195ee03414996bf99a4681658af94
        checksum/extra-configmaps: e862ea47e13e634cf17d476323784fa27dac20015550c230953b526182f5cac8
        checksum/extra-secrets: e9582fdd622296c976cbc10a5ba7d6702c28a24fe80795ea5b84ba443a56c827
    spec:
      serviceAccountName: {{ .Chart.Name }}-{{ .Values.env }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  component: webserver
              topologyKey: kubernetes.io/hostname
            weight: 100
      tolerations:
        []
      restartPolicy: Always
      securityContext:
        runAsUser: 50000
        fsGroup: 0
      initContainers:
        - name: wait-for-airflow-migrations
          resources:
            {}
          image: {{ template "airflow_image" . }}
          imagePullPolicy: Never
          volumeMounts:
            - name: config
              mountPath: "/opt/airflow/airflow.cfg"
              subPath: airflow.cfg
              readOnly: true
            - name: config
              mountPath: "/opt/airflow/config/airflow_local_settings.py"
              subPath: airflow_local_settings.py
              readOnly: true
          args:
            - airflow
            - db
            - check-migrations
            - --migration-wait-timeout=180
          envFrom:
            []
          env:
            {{- include "standard_airflow_environment" . | indent 10 }}
      containers:
        - name: webserver
          image: {{ template "airflow_image" . }}
          imagePullPolicy: Never
          args:
            - bash
            - -c
            - exec airflow webserver
          resources:
            {{- toYaml .Values.webserver.resources | nindent 12 }}
          volumeMounts:
            - name: logs
              mountPath: /opt/airflow/logs
            - name: config
              mountPath: /opt/airflow/pod_templates/pod_template_file.yaml
              subPath: pod_template_file.yaml
              readOnly: true
            - name: config
              mountPath: "/opt/airflow/airflow.cfg"
              subPath: airflow.cfg
              readOnly: true
            - name: config
              mountPath: "/opt/airflow/config/airflow_local_settings.py"
              subPath: airflow_local_settings.py
              readOnly: true
          ports:
            - name: airflow-ui
              containerPort: 8080
          envFrom:
            []
          env:
            {{- include "standard_airflow_environment" . | nindent 10 }}
      volumes:
        - name: logs
          emptyDir: {}
        - name: config
          configMap:
            name: airflow-config-{{ .Values.env }}
