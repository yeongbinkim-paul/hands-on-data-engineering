kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Chart.Name }}-dag-syncer-{{ .Values.env }}
  namespace: "{{ .Release.Namespace }}"
  labels:
{{- with .Values.labels }}
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  replicas: 1
  strategy:
    # Kill the dag-syncer as soon as possible.
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 100%
  selector:
    matchLabels:
      tier: airflow
      component: dag-syncer
      release: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        tier: airflow
        component: dag-syncer
        release: {{ .Chart.Name }}
    spec:
      nodeSelector:
        {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  component: dag-syncer
              topologyKey: kubernetes.io/hostname
            weight: 100
      tolerations:
        []
      topologySpreadConstraints:
        []
      restartPolicy: Always
      terminationGracePeriodSeconds: 10
      serviceAccountName: {{ .Chart.Name }}-{{ .Values.env }}
      securityContext:
        runAsUser: 0
        fsGroup: 0
      containers:
        - name: git-sync-container
          image: alpine/git
          imagePullPolicy: Always
          securityContext:
            runAsUser: 0
          command: ["/bin/sh", "-c"]
          args:
            - |
              while true; do
                cd /
                cd /opt/airflow/dags
                if [ ! -d "data-pipeline" ]; then
                  mkdir data-pipeline
                  cd data-pipeline
                  git clone -b {{ .Values.gitSync.branch }} {{ .Values.gitSync.repo }}
                else
                  cd data-pipeline
                  git pull
                fi
                sleep 60
              done
          envFrom:
            []
          env:
            - name: GIT_SSH_COMMAND
              value: "ssh -i /etc/git-secret/ssh"
            - name: SSH_KNOWN_HOSTS
              value: "true"
            - name: GIT_SSH_KNOWN_HOSTS_FILE
              value: "/etc/git-secret/known_hosts"
          resources:
            {{- toYaml .Values.gitSync.resources | nindent 12 }}
          volumeMounts:
              - name: gitsync-secret
                mountPath: /etc/git-secret
                readOnly: true
              - name: dag-data
                mountPath: "/opt/airflow/dags"

      volumes:
        - name: dag-data
          persistentVolumeClaim:
            claimName: "dag-syncer-pvc-{{ .Values.env }}"
        - name: gitsync-secret
          secret:
            secretName: gitsync-secret-{{ .Values.env }}
